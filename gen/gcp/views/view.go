// Code generated by goa v3.0.2, DO NOT EDIT.
//
// gcp views
//
// Command:
// $ goa gen github.com/PyYoshi/cloud_pubsub_gateway/design -o ./

package views

import (
	goa "goa.design/goa/v3/pkg"
)

// PubsubGatewayGcpPublish is the viewed result type that is projected based on
// a view.
type PubsubGatewayGcpPublish struct {
	// Type to project
	Projected *PubsubGatewayGcpPublishView
	// View to render
	View string
}

// PubsubGatewayGcpPublishView is a type that runs validations on a projected
// type.
type PubsubGatewayGcpPublishView struct {
	// message id
	ID *string
}

var (
	// PubsubGatewayGcpPublishMap is a map of attribute names in result type
	// PubsubGatewayGcpPublish indexed by view name.
	PubsubGatewayGcpPublishMap = map[string][]string{
		"default": []string{
			"id",
		},
	}
)

// ValidatePubsubGatewayGcpPublish runs the validations defined on the viewed
// result type PubsubGatewayGcpPublish.
func ValidatePubsubGatewayGcpPublish(result *PubsubGatewayGcpPublish) (err error) {
	switch result.View {
	case "default", "":
		err = ValidatePubsubGatewayGcpPublishView(result.Projected)
	default:
		err = goa.InvalidEnumValueError("view", result.View, []interface{}{"default"})
	}
	return
}

// ValidatePubsubGatewayGcpPublishView runs the validations defined on
// PubsubGatewayGcpPublishView using the "default" view.
func ValidatePubsubGatewayGcpPublishView(result *PubsubGatewayGcpPublishView) (err error) {
	if result.ID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("id", "result"))
	}
	return
}
